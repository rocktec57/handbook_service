# Content for Service Design Guide - Alpha
#
# Use sequential numbers in "number" to make sure accordions work correctly
#
# Use regular Markdown style for the content in "copy"
#
---
- number: p-1
  title: Planning for alpha
  # See /data/planning-for.yml for this content
- number: p-2
  title: During alpha
  copy: |
    #### 1. Test hypotheses quickly

    To get to a clear definition of your MVP, you'll need to test many different hypotheses. Your objective is to identify potential issues &mdash; and learn from them &mdash; while you still have time to make corrections.

    There's not a one-size-fits-all set of hypotheses to test during alpha. *But teams who are successful in the alpha phase tend to use design sprints to prototype and test their hypotheses.*

    A design sprint takes 1-2 weeks and is designed to solve important design or business challenges. Each design sprint starts with brainstorming activities that lead to a prototype that is tested with real users &mdash; all within the span of 1-2 weeks.

    <hr>

    #### 2. Identify your goals

    Each design sprint takes 1-2 weeks. So in an 8-week period, you might (realistically) do 3-5 design sprints.

    Start mapping out your work in the alpha phase by identifying your team's goals. Consider these questions:

    * Based on your discovery research and findings, what **kinds of solutions** make the most sense in terms of meeting your users' needs?
    * Which of those would you like to move forward with and test?
    * What are the biggest **design risks** in those solutions?
    * What are the biggest **technical risks** in those solutions?
    * What are the biggest **business or policy risks** in those solutions?
    * What are your hypotheses about these risks and solutions?

    <hr>

    #### 3. Plan a design sprint

    Based on the goals and hypotheses you've identified, map out your first design sprint.

    * Don't test all your hypotheses at once. Target each design sprint to specific hypotheses.
    * Test the most risky hypotheses first &mdash; the ones that, if your hypothesis is proven wrong, will derail your solution concept.
    * Test your design/user experience hypotheses &mdash; for example, a single-page vs multi-page user flow.
    * Test your technical hypotheses &mdash; for example, whether a specific Vets-API provides data in the format you need.

    <hr>

    #### 4. Conduct a design sprint

    Use the following steps for each design sprint:

    1. Review &mdash; review current goals, hypotheses, and solution concepts with your team
    2. Sketch &mdash; use individual and group brainstorming activities to explore design solutions that will test your hypotheses
    3. Decide &mdash; select a single option to move on to testing
    4. Prototype &mdash; create a a simple prototype to test the solution ([tips for alpha prototypes](related/other-resources/alpha-prototypes))
    5. Test &mdash; test the prototype with real users and collect their feedback
        * **Tip**: Your goal is to iterate quickly. So make sure you plan far enough in advance to recruit participants for each design sprint.
    6. Analyze &mdash; assess the user feedback and decide how it impacts your solution concept
    7. Plan &mdash; plan your next design sprint incorporating what you've just learned into the next prototype

        * **Tips**:
          * Involve all team members in alpha prototyping. This leads to better design outcomes and helps the team create a common understanding of the service.
          * You can learn more about design sprints at <a title="Go to google ventures" href="http://www.gv.com/sprint/" target="_blank">Google Ventures</a>, as well as <a title="Go to design sprint kit" href="https://designsprintkit.withgoogle.com" target="_blank">Google's Design Sprint Kit</a> (a slight variation on the first link)

    Keep iterating with your design sprints until your team can demonstrate your prototypes meet your users' basic needs and the team is confident about moving on.
- number: p-3
  title: Getting ready for beta
  copy: |
    Review the following &mdash; although you won't finalize these tasks until beta, review them now so you can plan ahead.

    * [Define the information architecture](related/other-resources/info-architecture)

    * <a title="go to ATO" href="https://department-of-veterans-affairs.github.io/va-digital-services-platform-docs/docs/deploy-your-app/ato.html" target="_blank">Determine if you need an ATO</a> (new or existing) and what to do
    * [Review your service with the Call Center](related/other-resources/call-center)
    * Plan [marketing and communication materials](related/other-resources/marcom)
- number: p-4
  title: Completing alpha
  copy: |
    #### By the end of alpha, your team should have the following

    * A clear vision and definition for the MVP service you'll build in beta (see [Scoping the MVP](related/other-resources/scoping-mvp))
    * Thoroughly tested prototypes that demonstrate the design of the MVP service
    * A prioritized list of user stories and features for the MVP service (your backlog)
    * A clear understanding of the technology that will support the MVP service (and an understanding of how the technology might evolve for later releases)
    * An understanding of other VA systems you need to replace or integrate with
    * A proposed set of metrics to measure your serviceâ€™s success
    * Documentation of the user research you did in the alpha phase
    * A plan and timeline for your beta phase
    * An updated resource plan (if you need additional people or other resources for the beta phase)
  # See /data/next-steps.yml for the rest of the Completing alpha content
